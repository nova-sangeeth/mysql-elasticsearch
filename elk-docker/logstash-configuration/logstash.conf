input {
  jdbc {
    jdbc_driver_library => "/java_driver/mariadb-java-client-3.0.8.jar" 
    jdbc_driver_class => "org.mariadb.jdbc.Driver"
    jdbc_connection_string => "jdbc:mariadb://mariadb:3306/instaqp?sessionVariables=sql_mode=ANSI_QUOTES" 
    jdbc_user => "instaqp" 
    jdbc_password => "passw0rd" 
    jdbc_paging_enabled => true
    tracking_column => "unix_ts_in_secs"
    use_column_value => true
    tracking_column_type => "numeric"
    schedule => "*/5 * * * * *"
    # schedule => "1 * * * *"
    statement => "SELECT *, UNIX_TIMESTAMP(modification_time) AS unix_ts_in_secs FROM es_table WHERE (UNIX_TIMESTAMP(modification_time) > :sql_last_value AND modification_time < NOW()) ORDER BY modification_time ASC"
    type => "es_table"
  }
  jdbc {
    jdbc_driver_library => "/java_driver/mariadb-java-client-3.0.8.jar" 
    jdbc_driver_class => "org.mariadb.jdbc.Driver"
    jdbc_connection_string => "jdbc:mariadb://mariadb:3306/instaqp?sessionVariables=sql_mode=ANSI_QUOTES" 
    jdbc_user => "instaqp" 
    jdbc_password => "passw0rd" 
    jdbc_paging_enabled => true
    tracking_column => "unix_ts_in_secs"
    use_column_value => true
    tracking_column_type => "numeric"
    schedule => "*/5 * * * * *"
    # schedule => "1 * * * *"
    type => "es_table_2"
    statement => "SELECT *, UNIX_TIMESTAMP(modification_time) AS unix_ts_in_secs FROM es_table_2 WHERE (UNIX_TIMESTAMP(modification_time) > :sql_last_value AND modification_time < NOW()) ORDER BY modification_time ASC"
  }
  jdbc {
    jdbc_driver_library => "/java_driver/mariadb-java-client-3.0.8.jar" 
    jdbc_driver_class => "org.mariadb.jdbc.Driver"
    jdbc_connection_string => "jdbc:mariadb://mariadb:3306/instaqp?sessionVariables=sql_mode=ANSI_QUOTES" 
    jdbc_user => "instaqp" 
    jdbc_password => "passw0rd" 
    jdbc_paging_enabled => true
    tracking_column => "unix_ts_in_secs"
    use_column_value => true
    tracking_column_type => "numeric"
    schedule => "*/5 * * * * *"
    # schedule => "1 * * * *"
    type => "es_table_3"
    statement => "SELECT *, UNIX_TIMESTAMP(modification_time) AS unix_ts_in_secs FROM es_table_3 WHERE (UNIX_TIMESTAMP(modification_time) > :sql_last_value AND modification_time < NOW()) ORDER BY modification_time ASC"
  }
}

output {
    if [type] == "es_table" {
        elasticsearch {
            hosts => ["elasticsearch:9200"]
            # hosts => ["localhost:9200"]
            index => "test-idx"
        }
    }
    else if [type] == "es_table_2" {
        elasticsearch {
            hosts => ["elasticsearch:9200"]
            # hosts => ["localhost:9200"]
            index => "test-idx-2"
        }
    }
    else if [type] == "es_table_3" {
        elasticsearch {
            hosts => ["elasticsearch:9200"]
            # hosts => ["localhost:9200"]
            index => "test-idx-3"
        }
    }

}